<?xml version="1.0" encoding="UTF-8"?>
<!-- A pom.xml file for TaxonDNA -->
<!--
  We used Ant files [1] until Feb 2021, when I switched over to Maven.

  For now, I'll copy the way in which we implemented this in Ant back in 2006,
  which is to create multiple JAR files for each "software" (SpeciesIdentifier,
  SequenceMatrix, and so on). Eventually, the right thing to do would be to split
  the Common code into a separate package and then include it into the other
  softwares.

  [1] https://github.com/gaurav/taxondna/blob/1842c7329d2c32fe76bf5c352720712c2cc7d46d/build.xml
-->
<project>
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ggvaidya</groupId>
  <artifactId>TaxonDNA</artifactId>
  <version>1.10-SNAPSHOT</version>

  <name>TaxonDNA</name>
  <description>Taxonomy-aware DNA sequence processing toolkit.</description>
  <url>https://github.com/gaurav/taxondna</url>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git://github.com/gaurav/taxondna.git</connection>
    <developerConnection>scm:git:ssh://github.com:gaurav/taxondna.git</developerConnection>
    <url>http://github.com/gaurav/taxondna</url>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <spotless.version>2.22.2</spotless.version>
  </properties>

  <build>
    <plugins>
      <!-- Compilation configuration -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <testSource>${maven.compiler.source}</testSource>
          <testTarget>${maven.compiler.target}</testTarget>
          <compilerArgument>-Xlint:unchecked</compilerArgument>
        </configuration>
      </plugin>

      <!--
          Create multiple JAR files, one for each 'software'.
        -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <!-- SpeciesIdentifier -->
          <execution>
            <id>SpeciesIdentifier</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <archive>
                <index>true</index>
                <manifest>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  <mainClass>com.ggvaidya.TaxonDNA.SpeciesIdentifier.SpeciesIdentifier</mainClass>
                </manifest>
              </archive>
              <classifier>SpeciesIdentifier</classifier>
              <includes>
                <include>com/ggvaidya/TaxonDNA/Common/**</include>
                <include>com/ggvaidya/TaxonDNA/SpeciesIdentifier/**</include>
              </includes>
            </configuration>
          </execution>

          <!-- GenBankExplorer -->
          <execution>
            <id>GenBankExplorer</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <archive>
                <index>true</index>
                <manifest>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  <mainClass>com.ggvaidya.TaxonDNA.GenBankExplorer.GenBankExplorer</mainClass>
                </manifest>
              </archive>
              <classifier>GenBankExplorer</classifier>
              <includes>
                <include>com/ggvaidya/TaxonDNA/Common/**</include>
                <include>com/ggvaidya/TaxonDNA/GenBankExplorer/**</include>
              </includes>
            </configuration>
          </execution>

          <!-- SequenceMatrix -->
          <execution>
            <id>SequenceMatrix</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <archive>
                <index>true</index>
                <manifest>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  <mainClass>com.ggvaidya.TaxonDNA.SequenceMatrix.SequenceMatrix</mainClass>
                </manifest>
              </archive>
              <classifier>SequenceMatrix</classifier>
              <includes>
                <include>com/ggvaidya/TaxonDNA/Common/**</include>
                <include>com/ggvaidya/TaxonDNA/SequenceMatrix/**</include>
              </includes>
            </configuration>
          </execution>

          <!--
                In build.xml, there was a reference to something called 'DClusters',
                in com.ggvaidya.TaxonDNA.DClusters, but this no longer appears to be
                part of the source. Oh well!
              -->
        </executions>
      </plugin>

      <!-- We use Spotless to check style -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <include>.gitignore</include>
              </includes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace></trimTrailingWhitespace>
              <endWithNewline></endWithNewline>
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>4</spacesPerTab>
              </indent>
            </format>
          </formats>

          <!-- define a language-specific format -->
          <java>
            <!-- no need to specify files, inferred automatically, but you can if you want -->

            <!-- apply a specific flavor of google-java-format and reflow long strings -->
            <googleJavaFormat>
              <version>1.13.0</version>
              <style>AOSP</style>
              <reflowLongStrings>true</reflowLongStrings>
            </googleJavaFormat>
          </java>

          <!-- Format Markdown files -->
          <markdown>
            <includes>
              <!-- You have to set the target manually -->
              <include>**/*.md</include>
            </includes>

            <flexmark></flexmark>
            <!-- has its own section below -->
          </markdown>

          <!-- Format this POM file -->
          <pom>
            <!-- These are the defaults, you can override if you want -->
            <includes>
              <include>pom.xml</include>
            </includes>

            <sortPom></sortPom>
          </pom>
        </configuration>
      </plugin>

      <!-- We use the Assembly plugin to build the releases. -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>SpeciesIdentifier</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>src/assemblies/SpeciesIdentifier.xml</descriptor>
              </descriptors>
              <finalName>SpeciesIdentifier-${project.version}</finalName>
            </configuration>
          </execution>
          <execution>
            <id>SequenceMatrix</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>src/assemblies/SequenceMatrix.xml</descriptor>
              </descriptors>
              <finalName>SequenceMatrix-${project.version}</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
