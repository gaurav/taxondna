<project default = "compile">
	<property name =        "build.dir"      location = "build"    />
	<property file =        "version.txt" />

	<!-- compile-time options -->
        <!-- Until TaxonDNA 1.5, code was written to target JRE 1.4. Since then,
             we target JRE 1.5 instead. If you'd like to backport TaxonDNA to
             JRE 1.4 (in order to support MacOS X 10.3, for instance), flip this
             variable and fix all the issues which come up.
        -->
        <property name = "java.targetversion" value = "1.5" />

        <!-- 
            files.common: (Common) files used by all the TaxonDNA tools
            This is used to determine which files to package into the
            JAR files.
        -->
        <property name = "files.common"
            value = "**/Common/**, **/DNA/**, **/Others/**, **/UI/**"
        />
	
    <!--
        Targets begin here.
    -->

	<!-- 
        compile:
            Compile will recompile all our Java code into Java classes
            in one shot
    -->
	<target name = "compile">
		<javac
			srcdir =        "src"
			debug =         "yes" 
			optimize =      "yes" 
			deprecation =   "yes" 
			source =        "${java.targetversion}"
			target =        "${java.targetversion}"
			destdir =       "${build.dir}/classes"
                        includeAntRuntime = "no"
		>
			<compilerarg value = "-Xlint:unchecked" />
		</javac>
	</target>

	<!-- 
        src:
            Zips up the ENTIRE directory into one
			file for a full-source backup.
	-->
	<target name = "src">
		<!-- Warning: This will fail unless we are in a directory called 'TaxonDNA' -->
		<zip
			destfile =      "../TaxonDNA-src-${taxondna.version}.zip"
			basedir =       "../"
			includes =      "TaxonDNA/**"
			excludes =      "**/.svn, **/.git, TaxonDNA/Releases"
			comment =       "(c) Gaurav Vaidya, 2006, 2009, 2010"
		/>
        <move 
            file = "../TaxonDNA-src-${taxondna.version}.zip"
            todir = "Releases"
        />
	</target>

	<!--
        javadocs:
            Recompiles the JavaDocs (in Documentation/Javadocs)
    -->
	<target name = "javadocs"   depends = "compile">
		<javadoc
			packagenames =  "com.ggvaidya.TaxonDNA.*"
			sourcepath =    "."
			source =        "${java.version}"
			destdir =       "Documentation/Javadocs/"
		/>
	</target>

	<!--
        clean:
            Cleans up the build path
    -->
	<target name = "clean">
		<delete     dir = "${build.dir}"            />
		<mkdir      dir = "${build.dir}"            />
		<mkdir      dir = "${build.dir}/classes"    />
	</target>

	<!--
        rebuild:
            Cleans the build path, then generates a build
    -->
	<target name = "rebuild"    depends = "clean, build">
	</target>

	<!-- 
        build:
            Prepares ChangeLog and Readme files.
			This is also the most convenient way to
			ensure that all Jars are built

			Does NOT make a final zip. 'release' does that.
	-->
	<target name = "build" depends = "SpeciesIdentifier,SequenceMatrix,GenBankExplorer">
	</target>

	<!-- SpeciesIdentifier:		Builds the Jar file for SpeciesIdentifier -->
	<target name = "SpeciesIdentifier"      depends = "compile">
		<jar
			destfile =  "Release/SpeciesIdentifier/SpeciesIdentifier.jar"
			basedir =   "${build.dir}/classes"
			includes =  "${files.common}, **/SpeciesIdentifier/**"
		>
			<manifest>
				<attribute name = "Main-Class"  value = "com.ggvaidya.TaxonDNA.SpeciesIdentifier.SpeciesIdentifier" />
			</manifest>
		</jar>
	</target>

	<!-- SequenceMatrix:		Builds the Jar file for SequenceMatrix -->
	<target name = "SequenceMatrix"         depends = "compile">
		<jar
			destfile =  "Release/SequenceMatrix/SequenceMatrix.jar"
			basedir =   "${build.dir}/classes"
			includes =  "${files.common}, **/SequenceMatrix/**"
		>
			<manifest>
				<attribute name = "Main-Class"  value = "com.ggvaidya.TaxonDNA.SequenceMatrix.SequenceMatrix" />
			</manifest>
		</jar>
	</target>

	<!-- GenBankExplorer:		Builds the Jar file for GenBankExplorer -->
	<target name = "GenBankExplorer"        depends = "compile">
		<jar
			destfile =  "Release/GenBankExplorer.jar"
			basedir =   "${build.dir}/classes"
			includes =  "${files.common}, **/GenBankExplorer/**"
		>
			<manifest>
				<attribute name = "Main-Class"  value = "com.ggvaidya.TaxonDNA.GenBankExplorer.GenBankExplorer" />
			</manifest>
		</jar>
	</target>

    <!-- SequenceMatrix.app:        Creates an .app for Sequence Matrix -->
    <target name = "SequenceMatrix.app"     depends = "build">
        <copy 
            file = "Release/SequenceMatrix/SequenceMatrix.jar"
            todir = "Release/SequenceMatrix/MacOSX/Sequence Matrix.app/Contents/Resources/Java"
        />
    </target>

    <!-- DClusters:          Builds the release folder for DistClus -->
    <target name = "DClusters"       depends = "compile">
        <jar
            destfile =  "Release/DClusters.jar"
            basedir =   "${build.dir}/classes"
            includes =  "${files.common}, **/DClusters/**"
        >
            <manifest>
                <attribute name = "Main-Class" value = "com.ggvaidya.TaxonDNA.DClusters.DClusters" />
            </manifest>
        </jar>
    </target>

	<!-- 
        release: Release both Species Identifier and Sequence Matrix at once
    -->
	<target name = "release"    depends = "SeqMat_release, SpecId_release, DClusters">
    </target>

    <!--
        SpecId_release: Release Species Identifier only.
    -->
    <target name = "SpecId_release" depends = "build">
        <copy file="Changes.txt" overwrite="yes" todir="Release/SpeciesIdentifier" />
        <zip
	        destfile =      "../SpeciesIdentifier-${taxondna.version}.zip"
	        basedir =       "Release/SpeciesIdentifier"
	    	comment =       "(c) Gaurav Vaidya, 2007, 2009, 2010"
	    	update =        "false"
	    />
        <move
            file="../SpeciesIdentifier-${taxondna.version}.zip"
            todir="Releases"
        />
    </target>

    <!--
        SeqMat_release: Release Sequence Matrix only.
    -->
    <target name = "SeqMat_release" depends = "build, SequenceMatrix.app">
        <copy file="Changes.txt" overwrite="yes" todir="Release/SequenceMatrix/Windows" />
        <copy file="Changes.txt" overwrite="yes" todir="Release/SequenceMatrix/MacOSX" />
        <copy 
            file="Release/SequenceMatrix/SequenceMatrix.jar"
            todir="Release/SequenceMatrix/Windows" />
        <zip 
	        destfile =      "../SequenceMatrix-Windows-${taxondna.version}.zip"
	        basedir =       "Release/SequenceMatrix/Windows"
	    	comment =       "(c) Gaurav Vaidya, 2007, 2009, 2010"
	    	update =        "false"
	    />
        <move file = "../SequenceMatrix-Windows-${taxondna.version}.zip" todir = "Releases" />
        <delete
            dir="Releases/SequenceMatrix-MacOSX-${taxondna.version}"
            quiet="yes"
        /><!-- quiet -> don't complain if the folder doesn't exist (it probably won't anyway) -->
        <mkdir dir="Releases/SequenceMatrix-MacOSX-${taxondna.version}" />
        <copy overwrite="yes" todir="Releases/SequenceMatrix-MacOSX-${taxondna.version}">
            <fileset dir="Release/SequenceMatrix/MacOSX" />
        </copy>
        <chmod
            file="Releases/SequenceMatrix-MacOSX-${taxondna.version}/Sequence Matrix.app/Contents/MacOS/JavaApplicationStub"
            perm="755"
        />
        <!-- It's now up to you to compress this -->
	</target>

    <!--
            NetBeans needs targets for running specific programs. Can't say
            that's a bad idea.
    -->
    <target name="run_spid" depends="SpeciesIdentifier">
        <java jar="Release/SpeciesIdentifier/SpeciesIdentifier.jar" maxmemory="2048m" fork="true">
        </java>
    </target>
    <target name="run_seqmat" depends="SequenceMatrix">
        <java jar="Release/SequenceMatrix/SequenceMatrix.jar" maxmemory="2048m" fork="true">
        </java>
    </target>
    <target name="run_gbx" depends="GenBankExplorer">
        <java jar="Release/GenBankExplorer.jar" maxmemory="2048m" fork="true">
        </java>
    </target>
    <target name="run_dclusters" depends="DClusters">
        <java jar="Release/DClusters.jar" maxmemory="2048m" fork="true" />
    </target>
        
</project>
